apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "metallb.fullname" . }}-controller
  labels: {{- include "metallb.labels" . | nindent 4 }}
    component: controller
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels: {{- include "metallb.matchLabels" . | nindent 6 }}
      component: controller
  template:
    metadata:
      labels: {{- include "metallb.labels" . | nindent 8 }}
        component: controller
      {{- if .Values.controller.podAnnotations }}
      annotations: {{- toYaml .Values.controller.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
{{- include "metallb.controller.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "metallb.controllerServiceAccountName" . }}
      terminationGracePeriodSeconds: 0
      {{- if .Values.controller.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.controller.securityContext.runAsUser }}
        fsGroup: {{ .Values.controller.securityContext.fsGroup }}
        runAsNonRoot: {{ .Values.controller.securityContext.runAsNonRoot }}
      {{- end }}
      nodeSelector: {{- include "metallb.tplValue" (dict "value" .Values.controller.nodeSelector "context" $) | nindent 8 }}
        "beta.kubernetes.io/os": linux
      {{- if .Values.controller.affinity }}
      affinity: {{- include "metallb.tplValue" (dict "value" .Values.controller.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations}}
      tolerations: {{- include "metallb.tplValue" (dict "value" .Values.controller.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
      - name: controller
        image: {{ include "metallb.controller.image" . }}
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        args:
        - --port=7472
        - --config={{ include "metallb.configMapName" . }}
        ports:
        - name: http-metrics
          containerPort: 7472
      {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: http-metrics
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
      {{- end }}
        resources:
{{ toYaml .Values.controller.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
